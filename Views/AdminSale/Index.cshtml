@using KitapProject.Entities
@model List<Order>

@{
    ViewData["Title"] = "Sipariş Yönetimi";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<script src="https://cdn.tailwindcss.com"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">

<style>
    * {
        box-sizing: border-box;
    }

    body {
        margin: 0;
        padding: 0;
        font-family: Arial, sans-serif;
        overflow-x: hidden;
        font-size: 14px;
    }

    .gradient-bg {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        padding: 0.75rem;
    }

    .card-hover {
        transition: all 0.3s ease;
        max-width: 100%;
        width: 100%;
        margin: 0 auto;
    }

        .card-hover:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }

    .status-pending,
    .status-completed,
    .status-cancelled,
    .status-preparing {
        max-width: 100%;
        margin: 0.5rem auto;
        padding: 0.5rem 1rem;
        border-radius: 8px;
        text-align: center;
        word-wrap: break-word;
        display: inline-block;
        font-size: 0.85rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .status-pending {
        background: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%);
        color: #8b4513;
        border: 1px solid #f4a261;
    }

    .status-completed {
        background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
        color: #155724;
        border: 1px solid #28a745;
    }

    .status-cancelled {
        background: linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%);
        color: #721c24;
        border: 1px solid #dc3545;
    }

    .status-preparing {
        background: linear-gradient(135deg, #a18cd1 0%, #fbc2eb 100%);
        color: #0c5460;
        border: 1px solid #17a2b8;
    }

    .rainbow-border {
        border: 2px solid;
        border-image: linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1, #96ceb4, #feca57, #ff9ff3) 1;
        border-radius: 12px;
        padding: 0.75rem;
        max-width: 95%;
        margin: 0.75rem auto;
    }

    .pulse-animation {
        animation: pulse 2s infinite;
    }

    @@keyframes pulse {
        0% {
            transform: scale(1);
        }

        50% {
            transform: scale(1.01);
        }

        100% {
            transform: scale(1);
        }
    }

    .floating {
        animation: floating 3s ease-in-out infinite;
    }

    @@keyframes floating {
        0% {
            transform: translateY(0px);
        }

        50% {
            transform: translateY(-3px);
        }

        100% {
            transform: translateY(0px);
        }
    }

    .glass-effect {
        background: rgba(255, 255, 255, 0.85);
        backdrop-filter: blur(8px);
        border: 1px solid rgba(255, 255, 255, 0.15);
        padding: 1rem;
        border-radius: 10px;
        max-width: 95%;
        margin: 0.75rem auto;
    }

    .min-h-screen {
        min-height: 100vh;
    }

    .main-content-padding {
        padding: 1rem;
    }

    .background-gradient {
        background: linear-gradient(to bottom right, #a78bfa, #ec4899, #ef4444);
    }

    .order-header-container {
        margin-bottom: 1.5rem;
        border-radius: 1rem;
        position: relative;
        overflow: hidden;
        max-width: 95%;
        margin-left: auto;
        margin-right: auto;
        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
    }

    .order-header-bg {
        background: linear-gradient(to right, #2563eb, #9333ea, #ec4899);
        padding: 1.5rem;
    }

    .order-header-content {
        text-align: center;
    }

    .order-header-title {
        font-size: 2.5rem;
        font-weight: bold;
        color: #fff;
        margin-bottom: 0.5rem;
    }

    .order-header-icon-left {
        margin-right: 0.75rem;
        color: #facc15;
    }

    .order-header-icon-right {
        margin-left: 0.75rem;
        color: #facc15;
    }

    .order-header-subtitle {
        font-size: 1rem;
        color: #e9d5ff;
    }

    .status-cards-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
        gap: 1.25rem;
        margin-bottom: 1.5rem;
        max-width: 95%;
        margin-left: auto;
        margin-right: auto;
    }

    .status-card-inner {
        padding: 1rem;
        border-radius: 1rem;
    }

    .status-card-icon {
        font-size: 2.5rem;
        margin-bottom: 0.5rem;
    }

    .status-card-title {
        font-size: 1.25rem;
        font-weight: bold;
    }

    .status-card-count {
        font-size: 2rem;
        font-weight: bold;
    }

    .table-section-container {
        border-radius: 1.5rem;
        box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        border: 2px solid;
        border-image: linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1, #96ceb4, #feca57, #ff9ff3) 1;
        max-width: 95%;
        margin-left: auto;
        margin-right: auto;
    }

    .table-responsive {
        overflow-x: auto;
    }

    .min-w-full {
        min-width: 100%;
    }

    .table-header-row {
        background: linear-gradient(to right, #9333ea, #2563eb, #9333ea);
        color: #fff;
    }

    .table-header-cell {
        padding: 0.75rem 1rem;
        text-align: left;
        font-weight: bold;
        font-size: 0.9rem;
    }

        .table-header-cell i {
            margin-right: 0.25rem;
        }

    .table-cell-padding {
        padding: 0.75rem 1rem;
        font-size: 0.85rem;
        color: green;
    }

    .user-initials-avatar {
        width: 2.5rem;
        height: 2.5rem;
        font-size: 0.9rem;
        margin-right: 0.75rem;
    }

    .user-info-text p.font-bold {
        font-size: 0.9rem;
        color: blue;
    }

    .user-info-text p.text-sm {
        font-size: 0.75rem;
        color: red;
    }

    .total-amount-display {
        font-size: 1.25rem;
        font-weight: bold;
    }

    .status-dropdown-button {
        padding: 0.3rem 0.6rem;
        font-size: 0.8rem;
        border-radius: 9999px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .dropdown-menu-wrapper {
        margin-top: 0.25rem;
        width: 10rem;
        border-radius: 0.75rem;
        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    }

    .dropdown-menu-item {
        padding: 0.5rem 0.75rem;
        font-size: 0.8rem;
        border-radius: 0.5rem;
    }

    .message-span, .error-span {
        padding: 0.2rem 0.5rem;
        font-size: 0.75rem;
    }

    .footer-message-container {
        text-align: center;
        padding: 1.5rem;
        margin-top: 1.5rem;
    }

    .footer-message-inner {
        padding: 0.75rem 1.5rem;
        border-radius: 1rem;
    }

    .footer-message-text {
        font-size: 1rem;
        font-weight: 600;
    }

        .footer-message-text i {
            margin-right: 0.5rem;
            margin-left: 0.5rem;
        }

    @@media (max-width: 768px) {
        .order-header-title {
            font-size: 1.8rem;
        }

        .order-header-subtitle {
            font-size: 0.9rem;
        }

        .status-cards-grid {
            grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
            gap: 1rem;
        }

        .status-card-icon {
            font-size: 2rem;
        }

        .status-card-title {
            font-size: 1rem;
        }

        .status-card-count {
            font-size: 1.8rem;
        }

        .table-header-cell, .table-cell-padding {
            padding: 0.5rem 0.75rem;
            font-size: 0.8rem;
        }

        .user-initials-avatar {
            width: 2rem;
            height: 2rem;
            font-size: 0.75rem;
        }

        .status-dropdown-button {
            padding: 0.2rem 0.4rem;
            font-size: 0.7rem;
        }

        .dropdown-menu-wrapper {
            width: 8rem;
        }

        .dropdown-menu-item {
            font-size: 0.75rem;
            padding: 0.4rem 0.6rem;
        }

        .message-span, .error-span {
            font-size: 0.7rem;
            padding: 0.15rem 0.4rem;
        }
    }
</style>


<div class="min-h-screen background-gradient main-content-padding">

    <div class="order-header-container">
        <div class="order-header-bg">
            <div class="order-header-content">
                <h1 class="order-header-title floating">
                    <i class="fas fa-shopping-cart order-header-icon-left"></i>
                    Sipariş Yönetimi
                    <i class="fas fa-crown order-header-icon-right"></i>
                </h1>
                <p class="order-header-subtitle">Siparişlerinizi renkli dünyada yönetin!</p>
            </div>
        </div>
    </div>

    @{
        var totalOrders = Model?.Count ?? 0;
        var completedOrders = Model?.Count(o => o.OrderStatus == "Tamamlandı") ?? 0;
        var preparingOrders = Model?.Count(o => o.OrderStatus == "Hazırlanıyor") ?? 0;
        var cancelledOrders = Model?.Count(o => o.OrderStatus == "İptal") ?? 0;
        var pendingOrders = totalOrders - completedOrders - preparingOrders - cancelledOrders;
    }

    <div class="status-cards-grid">
        <div class="glass-effect status-card-inner text-center card-hover pulse-animation">
            <i class="fas fa-box status-card-icon text-blue-500"></i>
            <h3 class="status-card-title text-gray-800">Toplam</h3>
            <p class="status-card-count text-blue-600">@totalOrders</p>
        </div>
        <div class="glass-effect status-card-inner text-center card-hover pulse-animation">
            <i class="fas fa-clock status-card-icon text-orange-500"></i>
            <h3 class="status-card-title text-gray-800">Beklemede</h3>
            <p class="status-card-count text-orange-600">@pendingOrders</p>
        </div>
        <div class="glass-effect status-card-inner text-center card-hover pulse-animation">
            <i class="fas fa-check-circle status-card-icon text-green-500"></i>
            <h3 class="status-card-title text-gray-800">Tamamlandı</h3>
            <p class="status-card-count text-green-600">@completedOrders</p>
        </div>
        <div class="glass-effect status-card-inner text-center card-hover pulse-animation">
            <i class="fas fa-cog status-card-icon text-purple-500"></i>
            <h3 class="status-card-title text-gray-800">Hazırlanıyor</h3>
            <p class="status-card-count text-purple-600">@preparingOrders</p>
        </div>
    </div>

    <div class="glass-effect table-section-container">
        @if (!Model.Any())
        {
            <div class="p-8 text-center"> <i class="fas fa-inbox text-5xl text-gray-400 mb-3"></i> <p class="text-xl text-gray-600 font-semibold">Henüz hiç sipariş bulunmamaktadır.</p> <p class="text-gray-500 mt-1">İlk siparişiniz geldiğinde burada görünecek!</p> </div>
        }
        else
        {
            <div class="table-responsive">
                <table class="min-w-full">
                    <thead>
                            <tr class="table-header-row">
                                <th class="table-header-cell">
                                    <i class="fas fa-user mr-2"></i>Müşteri
                                </th>
                                <th class="table-header-cell">
                                    <i class="fas fa-calendar mr-2"></i>Sipariş Tarihi
                                </th>
                                <th class="table-header-cell">
                                    <i class="fas fa-lira-sign mr-2"></i>Toplam Tutar
                                </th>
                                <th class="table-header-cell">
                                    <i class="fas fa-info-circle mr-2"></i>Durum
                                </th>
                                <th class="table-header-cell">
                                    <i class="fas fa-map-marker-alt mr-2"></i>Teslimat Adresi
                                </th>
                                <th class="table-header-cell">
                                    <i class="fas fa-city mr-2"></i>Şehir
                                </th>
                                <th class="table-header-cell">
                                    <i class="fas fa-flag mr-2"></i>Ülke
                                </th>
                                <th class="table-header-cell">
                                    <i class="fas fa-cogs mr-2"></i>İşlemler
                                </th>
                            </tr>
                        </thead>
                   <tbody>
                        @foreach (var order in Model)
                        {
                            var currentStatusDisplay = ((OrderStatus)Enum.Parse(typeof(OrderStatus), order.OrderStatus)).GetDisplayName();
                            var statusColorClass = "status-pending";
                            var rowGradient = "from-yellow-50 to-orange-50 hover:from-yellow-100 hover:to-orange-100";
                            var iconClass = "fas fa-clock";

                            switch (order.OrderStatus)
                            {
                                case "Tamamlandı":
                                    statusColorClass = "status-completed";
                                    rowGradient = "from-green-50 to-blue-50 hover:from-green-100 hover:to-blue-100";
                                    iconClass = "fas fa-check-circle";
                                    break;
                                case "İptal":
                                    statusColorClass = "status-cancelled";
                                    rowGradient = "from-red-50 to-pink-50 hover:from-red-100 hover:to-pink-100";
                                    iconClass = "fas fa-times-circle";
                                    break;
                                case "Hazırlanıyor":
                                    statusColorClass = "status-preparing";
                                    rowGradient = "from-blue-50 to-purple-50 hover:from-blue-100 hover:to-purple-100";
                                    iconClass = "fas fa-cog fa-spin";
                                    break;
                            }

                            var userInitials = order.AppUser?.FullName?.Split(' ')
                                .Select(n => n.FirstOrDefault())
                                .Take(2)
                                .Aggregate("", (acc, c) => acc + c)
                                ?? "??";

                            <tr class="bg-gradient-to-r @rowGradient transition-all duration-300 border-b border-purple-200 cursor-pointer" onclick="window.location.href = '@Url.Action("OrderDetails", "Sale", new { id = order.OrderId })'">
                                <td class="table-cell-padding">
                                    <div class="flex items-center">
                                        <div class="user-initials-avatar">
                                            @userInitials
                                        </div>
                                        <div class="user-info-text">
                                            <p class="font-bold">@order.AppUser?.FullName</p>
                                            <p class="text-sm">
                                                <i class="fas fa-envelope mr-1"></i>@order.AppUser?.Email
                                            </p>
                                        </div>
                                    </div>
                                </td>
                                <td class="table-cell-padding text-gray-700 font-semibold">
                                    <i class="fas fa-calendar-alt mr-1 text-blue-500"></i>
                                    @order.OrderDate.ToString("dd.MM.yyyy HH:mm")
                                </td>
                                <td class="table-cell-padding">
                                    <span class="total-amount-display">
                                        @order.TotalAmount.ToString("C", new System.Globalization.CultureInfo("tr-TR"))
                                    </span>
                                </td>
                                <td class="table-cell-padding">
                                    <div class="flex items-center space-x-3" onclick="event.stopPropagation();">
                                        <span class="@statusColorClass px-4 py-2 rounded-full text-sm font-bold shadow-lg">
                                            <i class="@iconClass mr-1"></i>@currentStatusDisplay
                                        </span>
                                        <div class="relative inline-block text-left">
                                            <button onclick="toggleDropdown('@order.OrderId')" type="button"
                                                    class="status-dropdown-button">
                                                <i class="fas fa-edit mr-1"></i>Durumu Değiştir
                                            </button>

                                            <div id="dropdown-@order.OrderId" class="hidden dropdown-menu-wrapper">
                                                <div class="py-2">
                                                    @foreach (var status in Enum.GetValues(typeof(OrderStatus)).Cast<OrderStatus>())
                                                    {
                                                        var displayName = status.GetDisplayName();
                                                        var buttonIcon = "fas fa-clock";
                                                        var buttonColorClass = "hover-yellow";

                                                        switch (status.ToString())
                                                        {
                                                            case "Tamamlandı":
                                                                buttonIcon = "fas fa-check-circle text-green-500";
                                                                buttonColorClass = "hover-green";
                                                                break;
                                                            case "İptal":
                                                                buttonIcon = "fas fa-times-circle text-red-500";
                                                                buttonColorClass = "hover-red";
                                                                break;
                                                            case "Hazırlanıyor":
                                                                buttonIcon = "fas fa-cog text-blue-500";
                                                                buttonColorClass = "hover-blue";
                                                                break;
                                                            default:
                                                                buttonIcon = "fas fa-clock text-orange-500";
                                                                buttonColorClass = "hover-orange";
                                                                break;
                                                        }

                                                        <button type="button"
                                                                class="dropdown-menu-item @buttonColorClass"
                                                                onclick="changeStatus('@order.OrderId', '@status')">
                                                            <i class="@buttonIcon mr-2"></i>@displayName
                                                        </button>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td class="table-cell-padding text-gray-700 font-medium">
                                    <i class="fas fa-home mr-1 text-purple-500"></i>@order.ShippingAddress
                                </td>
                                <td class="table-cell-padding text-gray-700 font-medium">
                                    <i class="fas fa-city mr-1 text-blue-500"></i>@order.City
                                </td>
                                <td class="table-cell-padding text-gray-700 font-medium">
                                    <i class="fas fa-flag mr-1 text-red-500"></i>@order.Country
                                </td>
                                <td class="table-cell-padding text-center">
                                    <a href="@Url.Action("OrderDetails", "Sale", new { id = order.OrderId })" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full transition duration-300 ease-in-out">
                                        <i class="fas fa-search-plus mr-1"></i> Detay
                                    </a>
                                </td>
                                <td class="table-cell-padding text-center">
                                    <span id="message-@order.OrderId" class="hidden message-span">
                                        <i class="fas fa-check-circle mr-1"></i>Güncellendi!
                                    </span>
                                    <span id="error-@order.OrderId" class="hidden error-span">
                                        <i class="fas fa-exclamation-triangle mr-1"></i>Hata!
                                    </span>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>

    <div class="footer-message-container">
        <div class="glass-effect footer-message-inner">
            <p class="footer-message-text">
                <i class="fas fa-heart text-red-500"></i>
                Renkli Sipariş Yönetimi ile Hayat Daha Güzel!
                <i class="fas fa-star text-yellow-500"></i>
            </p>
        </div>
    </div>
</div>

<script>
    function toggleDropdown(orderId) {
        document.querySelectorAll('[id^="dropdown-"]').forEach(dropdown => {
            if (dropdown.id !== `dropdown-${orderId}`) {
                dropdown.classList.add('hidden');
            }
        });

        const dropdown = document.getElementById(`dropdown-${orderId}`);
        dropdown.classList.toggle('hidden');
    }

    document.addEventListener('click', function (event) {
        if (!event.target.closest('[onclick^="toggleDropdown"]')) {
            document.querySelectorAll('[id^="dropdown-"]').forEach(dropdown => {
                dropdown.classList.add('hidden');
            });
        }
    });

    async function changeStatus(orderId, newStatus) {
        const messageElement = document.getElementById(`message-${orderId}`);
        const errorElement = document.getElementById(`error-${orderId}`);

        messageElement.classList.add('hidden');
        errorElement.classList.add('hidden');

        try {
            const response = await fetch('/AdminSale/UpdateOrderStatus', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': getAntiForgeryToken()
                },
                body: JSON.stringify({ orderId: parseInt(orderId), newStatus: newStatus })
            });

            if (response.ok) {
                messageElement.classList.remove('hidden');
                setTimeout(() => location.reload(), 3000);
            } else {
                const errorText = await response.text();
                errorElement.innerHTML = `<i class="fas fa-exclamation-triangle mr-1"></i>${errorText || 'Durum güncellenemedi.'}`;
                errorElement.classList.remove('hidden');
            }
        } catch (error) {
            console.error('Fetch error:', error);
            errorElement.innerHTML = '<i class="fas fa-wifi mr-1"></i>Ağ hatası.';
            errorElement.classList.remove('hidden');
        }

        const dropdown = document.getElementById(`dropdown-${orderId}`);
        dropdown.classList.add('hidden');
    }

    function getAntiForgeryToken() {
        const tokenElement = document.querySelector('input[name="__RequestVerificationToken"]');
        return tokenElement ? tokenElement.value : '';
    }

    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.floating').forEach((el, index) => {
            el.style.animationDelay = `${index * 0.5}s`;
        });

        document.querySelectorAll('.pulse-animation').forEach((el, index) => {
            el.style.animationDelay = `${index * 0.2}s`;
        });
    });
</script>

@section Scripts {
    @Html.AntiForgeryToken()
}